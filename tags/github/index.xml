<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Github on 进击的Hunter</title>
    <link>https://pyocean.com/tags/github/</link>
    <description>Recent content in Github on 进击的Hunter</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Thu, 31 Oct 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://pyocean.com/tags/github/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>一键即取，那些你保存在chrome上的密码</title>
      <link>https://pyocean.com/post/2019_10_31_chrome_password_exporter/</link>
      <pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pyocean.com/post/2019_10_31_chrome_password_exporter/</guid>
      <description>&lt;p&gt;本期搬运 &lt;a href=&#34;https://github.com/x899/chrome_password_grabber&#34;&gt;【github】Chrome-Password-Grabber&lt;/a&gt;，一款可以快速导出存储在chrome浏览器中密码的工具。支持 &lt;code&gt;Mac&lt;/code&gt; &lt;code&gt;Linux&lt;/code&gt; &lt;code&gt;Windows&lt;/code&gt; 三平台。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Webot微信机器人项目实战【通讯录导出与分析】</title>
      <link>https://pyocean.com/post/2019_09_24_webot_%E5%BE%AE%E4%BF%A1%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%AE%9E%E6%88%982/</link>
      <pubDate>Tue, 24 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pyocean.com/post/2019_09_24_webot_%E5%BE%AE%E4%BF%A1%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%AE%9E%E6%88%982/</guid>
      <description>&lt;p&gt;通过对上篇的阅读，我们已经学习到了对web微信的登录过程分析并成功进行模拟。那今天我们就接着讲，如何将个人通讯录列表导出为一个&lt;code&gt;excel&lt;/code&gt;文件。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Webot微信机器人项目实战【登录】</title>
      <link>https://pyocean.com/post/2019_09_19_webot_%E5%BE%AE%E4%BF%A1%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%AE%9E%E6%88%981/</link>
      <pubDate>Thu, 19 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pyocean.com/post/2019_09_19_webot_%E5%BE%AE%E4%BF%A1%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%AE%9E%E6%88%981/</guid>
      <description>&lt;p&gt;相信各位都有在使用微信，并且也知晓web版微信的存在。今天我们就来讲一下，如何通过模拟web版微信接口来制作一个全自动的微信机器人。本篇是该实战项目的第一篇，主讲如何实现一个登陆过程。整个的分析过程实际上是对&lt;code&gt;https://res.wx.qq.com/a/wx_fed/webwx/res/static/js/index_4f3487a.js&lt;/code&gt;文件的解读🐶。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Gihub&amp;Hugo搭建静态博客</title>
      <link>https://pyocean.com/post/2019_03_29_githubhugo%E6%90%AD%E5%BB%BAblog/</link>
      <pubDate>Fri, 29 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pyocean.com/post/2019_03_29_githubhugo%E6%90%AD%E5%BB%BAblog/</guid>
      <description>&lt;p&gt;作为非常受欢迎的开源静态站点生成器之一，Hugo兼速度与灵活性并存，而Github的存在又让blog搭建变成了几近0成本的可能。今天我们就来以Mac环境为例讲一讲如何利用俩者来快速搭建一个静态Blog。且编写风格为&lt;code&gt;Markdown&lt;/code&gt;。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>