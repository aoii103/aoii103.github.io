<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>进击的Hunter</title>
    <link>https://pyocean.com/</link>
    <description>Recent content on 进击的Hunter</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Fri, 10 Apr 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://pyocean.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Celery停止了任务却未关闭子进程，怎么破？</title>
      <link>https://pyocean.com/post/2020_04_11_%E6%9D%80%E6%AD%BBcelery%E4%BB%BB%E5%8A%A1%E5%AD%90%E8%BF%9B%E7%A8%8B/</link>
      <pubDate>Fri, 10 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pyocean.com/post/2020_04_11_%E6%9D%80%E6%AD%BBcelery%E4%BB%BB%E5%8A%A1%E5%AD%90%E8%BF%9B%E7%A8%8B/</guid>
      <description>&lt;p&gt;这问题似乎挺棘手的，毕竟我所进行的任务是通过celery下发给subprocess的。在查阅了资料我有了解决办法，以下是简化后的代码便于理解&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【项目实战】针对Twitter舆情进行LDA建模</title>
      <link>https://pyocean.com/post/2020_04_07_%E5%AD%A6%E7%82%B9nlp-twitter%E8%88%86%E6%83%85lda%E5%BB%BA%E6%A8%A1/</link>
      <pubDate>Tue, 07 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pyocean.com/post/2020_04_07_%E5%AD%A6%E7%82%B9nlp-twitter%E8%88%86%E6%83%85lda%E5%BB%BA%E6%A8%A1/</guid>
      <description>&lt;p&gt;2020年的开局确实比较悲惨，特别是在这几天，全球&lt;code&gt;convid-19&lt;/code&gt;患者已超百万。那么现在。我们就通过推特抓取了350万条与&lt;code&gt;virus&lt;/code&gt;相关的推文，看看墙外人民怎么看。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Mac配置指北】流畅的内建词典</title>
      <link>https://pyocean.com/post/2020_01_14_%E6%B5%81%E7%95%85%E7%9A%84mac%E9%85%8D%E7%BD%AE%E6%8C%87%E5%8C%97_%E5%86%8D%E4%B9%9F%E4%B8%8D%E7%94%A8%E7%BF%BB%E8%AF%91%E6%8F%92%E4%BB%B6/</link>
      <pubDate>Tue, 14 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pyocean.com/post/2020_01_14_%E6%B5%81%E7%95%85%E7%9A%84mac%E9%85%8D%E7%BD%AE%E6%8C%87%E5%8C%97_%E5%86%8D%E4%B9%9F%E4%B8%8D%E7%94%A8%E7%BF%BB%E8%AF%91%E6%8F%92%E4%BB%B6/</guid>
      <description>&lt;p&gt;个人认为，在&lt;code&gt;Mac&lt;/code&gt;下办公所提供的效率提升皆是因人而异，且一个普通人可以用到其自带功能的10%就已经很不错了。今天就给大家讲一讲它所自带的翻译功能。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何在mac上一键生成复杂口令</title>
      <link>https://pyocean.com/post/2019_12_19_%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%B8%80%E9%94%AE%E7%94%9F%E6%88%90%E5%A4%8D%E6%9D%82%E5%8F%A3%E4%BB%A4/</link>
      <pubDate>Thu, 19 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pyocean.com/post/2019_12_19_%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%B8%80%E9%94%AE%E7%94%9F%E6%88%90%E5%A4%8D%E6%9D%82%E5%8F%A3%E4%BB%A4/</guid>
      <description>&lt;p&gt;很多场景我们需要使用到 ”复杂口令“, 也就是哪些包含了字母大小写数字及符号的口令。自己想也可以，但总归麻烦。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>django笔记_ORM批量处理</title>
      <link>https://pyocean.com/post/2019_12_10_django%E7%AC%94%E8%AE%B0_orm%E6%89%B9%E9%87%8F%E5%A4%84%E7%90%86/</link>
      <pubDate>Tue, 10 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pyocean.com/post/2019_12_10_django%E7%AC%94%E8%AE%B0_orm%E6%89%B9%E9%87%8F%E5%A4%84%E7%90%86/</guid>
      <description>&lt;p&gt;假设现在需要将一批数据通过&lt;code&gt;django&lt;/code&gt;统统录入，如果你一直都是写个for循环然后批量create，那你就真该点开看看了。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>uvloop写的爬虫真的很快么</title>
      <link>https://pyocean.com/post/2019_12_12_uvloop%E5%86%99%E7%9A%84%E7%88%AC%E8%99%AB%E7%9C%9F%E7%9A%84%E5%BE%88%E5%BF%AB%E4%B9%88/</link>
      <pubDate>Tue, 10 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pyocean.com/post/2019_12_12_uvloop%E5%86%99%E7%9A%84%E7%88%AC%E8%99%AB%E7%9C%9F%E7%9A%84%E5%BE%88%E5%BF%AB%E4%B9%88/</guid>
      <description>&lt;p&gt;近来看到了一个叫做&lt;code&gt;uvloop&lt;/code&gt;的库，通过&lt;code&gt;Cpython&lt;/code&gt;编写，基于&lt;code&gt;libuv&lt;/code&gt;，并声称可以让&lt;code&gt;asyncio&lt;/code&gt;超过&lt;code&gt;node&lt;/code&gt;、&lt;code&gt;gevent&lt;/code&gt;甚至&lt;code&gt;golang&lt;/code&gt;的速度&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>django笔记_migrate异常处理</title>
      <link>https://pyocean.com/post/2019_12_07_django%E7%AC%94%E8%AE%B0_migrate%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/</link>
      <pubDate>Sat, 07 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pyocean.com/post/2019_12_07_django%E7%AC%94%E8%AE%B0_migrate%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/</guid>
      <description>&lt;p&gt;migrate即数据迁移，是Django将你对模型所做的更改（添加字段，删除模型等）同步到数据库的一种方式。它们的设计基本上是自动的，但是你需要知道何时进行迁移，何时运行它们以及可能遇到的常见问题。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何动态导入模块之imp</title>
      <link>https://pyocean.com/post/2019_11_24_%E5%A6%82%E4%BD%95%E5%8A%A8%E6%80%81%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%97/</link>
      <pubDate>Sun, 24 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pyocean.com/post/2019_11_24_%E5%A6%82%E4%BD%95%E5%8A%A8%E6%80%81%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%97/</guid>
      <description>&lt;p&gt;在我定制poc漏扫的开发过程成，需要动态从数据导出并添加某些模块，记录下这个过程&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>HTTP状态码 201,202,302,405 ... 傻傻分不清，看这一个项目就够啦</title>
      <link>https://pyocean.com/post/2019_11_21_%E7%94%A8%E4%B8%80%E5%8F%AA%E7%8C%AB%E6%9D%A5%E6%95%99%E4%BC%9A%E4%BD%A0%E5%90%84%E7%B1%BBhttp%E7%8A%B6%E6%80%81%E7%A0%81%E7%9A%84%E5%90%AB%E4%B9%89/</link>
      <pubDate>Thu, 21 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pyocean.com/post/2019_11_21_%E7%94%A8%E4%B8%80%E5%8F%AA%E7%8C%AB%E6%9D%A5%E6%95%99%E4%BC%9A%E4%BD%A0%E5%90%84%E7%B1%BBhttp%E7%8A%B6%E6%80%81%E7%A0%81%E7%9A%84%E5%90%AB%E4%B9%89/</guid>
      <description>&lt;p&gt;本期搬运 &lt;a href=&#34;https://github.com/httpcats/http.cat&#34;&gt;【github】http.cat&lt;/a&gt;，它是一款用于提供对应HTTP状态码界面模板的API，并且每次都会返回一张寓意如图的🐱喵喵相片。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何获取celery任务的ID号并在必要的时候进行关闭</title>
      <link>https://pyocean.com/post/2019_11_19_%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96celery%E4%BB%BB%E5%8A%A1%E7%9A%84id%E5%8F%B7%E5%B9%B6%E5%9C%A8%E5%BF%85%E8%A6%81%E7%9A%84%E6%97%B6%E5%80%99%E8%BF%9B%E8%A1%8C%E5%85%B3%E9%97%AD/</link>
      <pubDate>Tue, 19 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pyocean.com/post/2019_11_19_%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96celery%E4%BB%BB%E5%8A%A1%E7%9A%84id%E5%8F%B7%E5%B9%B6%E5%9C%A8%E5%BF%85%E8%A6%81%E7%9A%84%E6%97%B6%E5%80%99%E8%BF%9B%E8%A1%8C%E5%85%B3%E9%97%AD/</guid>
      <description>&lt;p&gt;我们都知道celery常用于异步任务，而当我在工作中尝试在方法内获取其任务ID的时候，遇到了难题，在这里简单记录下。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>一键即取，那些你保存在chrome上的密码</title>
      <link>https://pyocean.com/post/2019_10_31_chrome_password_exporter/</link>
      <pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pyocean.com/post/2019_10_31_chrome_password_exporter/</guid>
      <description>&lt;p&gt;本期搬运 &lt;a href=&#34;https://github.com/x899/chrome_password_grabber&#34;&gt;【github】Chrome-Password-Grabber&lt;/a&gt;，一款可以快速导出存储在chrome浏览器中密码的工具。支持 &lt;code&gt;Mac&lt;/code&gt; &lt;code&gt;Linux&lt;/code&gt; &lt;code&gt;Windows&lt;/code&gt; 三平台。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>python3.8正式发布，这些特性令人眼前一亮</title>
      <link>https://pyocean.com/post/2019_10_17_python38%E7%9A%84%E8%BF%99%E4%BA%9B%E7%89%B9%E6%80%A7%E4%BB%A4%E4%BA%BA%E7%9C%BC%E5%89%8D%E4%B8%80%E4%BA%AE/</link>
      <pubDate>Thu, 17 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pyocean.com/post/2019_10_17_python38%E7%9A%84%E8%BF%99%E4%BA%9B%E7%89%B9%E6%80%A7%E4%BB%A4%E4%BA%BA%E7%9C%BC%E5%89%8D%E4%B8%80%E4%BA%AE/</guid>
      <description>&lt;p&gt;在2019年10月14号，Python3.8第一版以正式发布。所以屏幕面前的各位2.7忠粉，你们到底还在等什么❓那么它能给大家带来怎样的全新体验，让我们一起看看吧。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【项目实战】如何同时对数百个Youtube Channel进行言论监控</title>
      <link>https://pyocean.com/post/2019_10_12_%E5%A6%82%E4%BD%95%E5%90%8C%E6%97%B6%E5%AF%B9%E6%95%B0%E7%99%BE%E4%B8%AAyoutubechannel%E8%BF%9B%E8%A1%8C%E8%A8%80%E8%AE%BA%E7%9B%91%E6%8E%A7/</link>
      <pubDate>Wed, 16 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pyocean.com/post/2019_10_12_%E5%A6%82%E4%BD%95%E5%90%8C%E6%97%B6%E5%AF%B9%E6%95%B0%E7%99%BE%E4%B8%AAyoutubechannel%E8%BF%9B%E8%A1%8C%E8%A8%80%E8%AE%BA%E7%9B%91%E6%8E%A7/</guid>
      <description>&lt;p&gt;这篇教程来源于前段时间的一个项目，现在已经过了私有期。故拿出来给大家讲讲，涨涨实战经验。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>入门, 如何发送你的第一段异步请求</title>
      <link>https://pyocean.com/post/2019_10_08_%E5%85%A5%E9%97%A8%E6%95%99%E5%AD%A6_%E5%A6%82%E4%BD%95%E5%8F%91%E9%80%81%E4%BD%A0%E7%9A%84%E7%AC%AC%E4%B8%80%E6%AE%B5%E5%BC%82%E6%AD%A5%E8%AF%B7%E6%B1%82/</link>
      <pubDate>Tue, 08 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pyocean.com/post/2019_10_08_%E5%85%A5%E9%97%A8%E6%95%99%E5%AD%A6_%E5%A6%82%E4%BD%95%E5%8F%91%E9%80%81%E4%BD%A0%E7%9A%84%E7%AC%AC%E4%B8%80%E6%AE%B5%E5%BC%82%E6%AD%A5%E8%AF%B7%E6%B1%82/</guid>
      <description>&lt;p&gt;异步编程是一种并行编程，其中允许一个工作单元与主应用程序线程分开运行。而其效率往往比同步代码高出数十倍。今天我就拿前段时间给朋友写的扫描器作为一个案例，带大家进入异步的世界。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何截取Youtube某段Video的音频片段</title>
      <link>https://pyocean.com/post/2019_10_01_%E5%A6%82%E4%BD%95%E6%88%AA%E5%8F%96youtube%E6%9F%90%E6%AE%B5video%E7%9A%84%E9%9F%B3%E9%A2%91%E7%89%87%E6%AE%B5/</link>
      <pubDate>Tue, 08 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pyocean.com/post/2019_10_01_%E5%A6%82%E4%BD%95%E6%88%AA%E5%8F%96youtube%E6%9F%90%E6%AE%B5video%E7%9A%84%E9%9F%B3%E9%A2%91%E7%89%87%E6%AE%B5/</guid>
      <description>&lt;p&gt;常看视频的朋友都应该知道，许多作者喜好在自己视频的结尾配上一些音乐作为点缀。某天在逛Youtube的时候看到下面这段视频，觉得结尾曲(大概中间开始)还挺好听的，于是就打算把它的这段音频给截取下来当手机铃声(&lt;code&gt;.m4a&lt;/code&gt;)用。&lt;/p&gt;

&lt;video controls=&#34;controls&#34;&gt;
    &lt;source type=&#34;video/mp4&#34; src=&#34;https://pyocean.com/data/youtube/Rust_oblivion.mp4&#34;&gt;&lt;/source&gt;
    &lt;p&gt;Your browser does not support the video element.&lt;/p&gt;
&lt;/video&gt;

&lt;!-- 
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//www.youtube.com/embed/_lWcuMQfF_Y&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
 --&gt;</description>
    </item>
    
    <item>
      <title>vue路径栏中?号与#号问题</title>
      <link>https://pyocean.com/post/2019_10_07_%E7%88%AC%E5%9D%91_vue%E8%B7%AF%E5%BE%84%E6%A0%8F%E4%B8%AD%E7%9A%84%E9%97%AE%E5%8F%B7%E5%92%8C%E4%BA%95%E5%8F%B7/</link>
      <pubDate>Mon, 07 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pyocean.com/post/2019_10_07_%E7%88%AC%E5%9D%91_vue%E8%B7%AF%E5%BE%84%E6%A0%8F%E4%B8%AD%E7%9A%84%E9%97%AE%E5%8F%B7%E5%92%8C%E4%BA%95%E5%8F%B7/</guid>
      <description>&lt;p&gt;在vue项目开发过程中，发现了这两个问题。一个不美观，另一个会导致界面刷新，在这里记录一下。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Webot微信机器人项目实战【通讯录导出与分析】</title>
      <link>https://pyocean.com/post/2019_09_24_webot_%E5%BE%AE%E4%BF%A1%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%AE%9E%E6%88%982/</link>
      <pubDate>Tue, 24 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pyocean.com/post/2019_09_24_webot_%E5%BE%AE%E4%BF%A1%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%AE%9E%E6%88%982/</guid>
      <description>&lt;p&gt;通过对上篇的阅读，我们已经学习到了对web微信的登录过程分析并成功进行模拟。那今天我们就接着讲，如何将个人通讯录列表导出为一个&lt;code&gt;excel&lt;/code&gt;文件。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Webot微信机器人项目实战【登录】</title>
      <link>https://pyocean.com/post/2019_09_19_webot_%E5%BE%AE%E4%BF%A1%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%AE%9E%E6%88%981/</link>
      <pubDate>Thu, 19 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pyocean.com/post/2019_09_19_webot_%E5%BE%AE%E4%BF%A1%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%AE%9E%E6%88%981/</guid>
      <description>&lt;p&gt;相信各位都有在使用微信，并且也知晓web版微信的存在。今天我们就来讲一下，如何通过模拟web版微信接口来制作一个全自动的微信机器人。本篇是该实战项目的第一篇，主讲如何实现一个登陆过程。整个的分析过程实际上是对&lt;code&gt;https://res.wx.qq.com/a/wx_fed/webwx/res/static/js/index_4f3487a.js&lt;/code&gt;文件的解读🐶。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>一次对js混淆代码的美化过程</title>
      <link>https://pyocean.com/post/2019_09_05_%E4%B8%80%E6%AC%A1%E5%AF%B9js%E6%B7%B7%E6%B7%86%E4%BB%A3%E7%A0%81%E7%9A%84%E7%BE%8E%E5%8C%96%E8%BF%87%E7%A8%8B/</link>
      <pubDate>Thu, 05 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pyocean.com/post/2019_09_05_%E4%B8%80%E6%AC%A1%E5%AF%B9js%E6%B7%B7%E6%B7%86%E4%BB%A3%E7%A0%81%E7%9A%84%E7%BE%8E%E5%8C%96%E8%BF%87%E7%A8%8B/</guid>
      <description>&lt;p&gt;代码混淆(Obfuscated code)亦称花指令，是将计算机程序的代码，转换成一种功能上等价，但是难于阅读和理解的形式的行为。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python上的时间复杂度</title>
      <link>https://pyocean.com/post/2019_09_02_python%E4%B8%8A%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6/</link>
      <pubDate>Thu, 22 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pyocean.com/post/2019_09_02_python%E4%B8%8A%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6/</guid>
      <description>&lt;p&gt;在计算机科学中，算法的时间复杂度（Time complexity）是一个函数，它定性描述该算法的运行时间。 这是一个代表算法输入值的字符串的长度的函数。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>你就不想知道，他/她/ta/他们的这些照片，是在哪里拍的么~</title>
      <link>https://pyocean.com/post/2019_08_31_%E4%BD%A0%E5%B0%B1%E4%B8%8D%E6%83%B3%E7%9F%A5%E9%81%93_%E4%BB%96%E4%BB%AC%E7%9A%84%E8%BF%99%E4%BA%9B%E7%85%A7%E7%89%87_%E6%98%AF%E5%9C%A8%E5%93%AA%E9%87%8C%E6%8B%8D%E7%9A%84%E4%B9%88/</link>
      <pubDate>Thu, 22 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pyocean.com/post/2019_08_31_%E4%BD%A0%E5%B0%B1%E4%B8%8D%E6%83%B3%E7%9F%A5%E9%81%93_%E4%BB%96%E4%BB%AC%E7%9A%84%E8%BF%99%E4%BA%9B%E7%85%A7%E7%89%87_%E6%98%AF%E5%9C%A8%E5%93%AA%E9%87%8C%E6%8B%8D%E7%9A%84%E4%B9%88/</guid>
      <description>&lt;p&gt;相信我们能在网络上浏览到各种各样的图片，或是在我们的手机里也存着非常多的照片。有没有在那么一刻，你渴望知道，这些图像的拍摄地，在哪儿。或是你想了解，某个人的曾经去了哪儿。那么今天，就给大家介绍一下，如何用工具解析图像的&lt;code&gt;exif&lt;/code&gt;信息，画出所谓的人轨。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>几个你所应该知晓的python3特性[python3.7及前版本]</title>
      <link>https://pyocean.com/post/2019_08_22_%E5%87%A0%E4%B8%AA%E4%BD%A0%E6%89%80%E5%BA%94%E8%AF%A5%E7%9F%A5%E6%99%93%E7%9A%84python3%E7%89%B9%E6%80%A7/</link>
      <pubDate>Thu, 22 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pyocean.com/post/2019_08_22_%E5%87%A0%E4%B8%AA%E4%BD%A0%E6%89%80%E5%BA%94%E8%AF%A5%E7%9F%A5%E6%99%93%E7%9A%84python3%E7%89%B9%E6%80%A7/</guid>
      <description>&lt;p&gt;时至今日，&lt;code&gt;python2&lt;/code&gt;大限已到，且&lt;code&gt;python3&lt;/code&gt;对各类原有框架及模块都有了非常好的支持。下面给大家简单介绍一些或许你不常用的，但你应该知道的那些 新特性。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>koolshare下Entware安装</title>
      <link>https://pyocean.com/post/2019_07_24_koolshare%E4%B8%8Bentware%E5%AE%89%E8%A3%85/</link>
      <pubDate>Wed, 24 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pyocean.com/post/2019_07_24_koolshare%E4%B8%8Bentware%E5%AE%89%E8%A3%85/</guid>
      <description>&lt;p&gt;Entware 使用 opkg 包管理系统进行管理, 是一个适用于嵌入式系统的软件包库，迄今为止在官方的源上已经有超过 2000 个软件包。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>一个简易的celery&#43;sqlite案例</title>
      <link>https://pyocean.com/post/2019_07_20_%E4%B8%80%E4%B8%AA%E7%AE%80%E6%98%93%E7%9A%84celery&#43;sqlite%E6%A1%88%E4%BE%8B/</link>
      <pubDate>Sat, 20 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pyocean.com/post/2019_07_20_%E4%B8%80%E4%B8%AA%E7%AE%80%E6%98%93%E7%9A%84celery&#43;sqlite%E6%A1%88%E4%BE%8B/</guid>
      <description>&lt;p&gt;Celery 是一个简单、灵活且可靠的，处理大量消息的分布式系统，并且提供维护这样一个系统的必需工具。今天我们通过一个案例简单得讲一下celery的快速应用。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>关于代理匿名等级检测</title>
      <link>https://pyocean.com/post/2019_07_05_%E5%85%B3%E4%BA%8E%E4%BB%A3%E7%90%86%E5%8C%BF%E5%90%8D%E7%AD%89%E7%BA%A7%E6%A3%80%E6%B5%8B/</link>
      <pubDate>Fri, 05 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pyocean.com/post/2019_07_05_%E5%85%B3%E4%BA%8E%E4%BB%A3%E7%90%86%E5%8C%BF%E5%90%8D%E7%AD%89%E7%BA%A7%E6%A3%80%E6%B5%8B/</guid>
      <description>&lt;p&gt;现在市面上我们可以了解到的代理类型分别为&lt;code&gt;TRANSPARENT&lt;/code&gt;、&lt;code&gt;ANONYMOUS&lt;/code&gt;、&lt;code&gt;DISTORTING&lt;/code&gt;、&lt;code&gt;ELITE&lt;/code&gt;四种。今天，我们就来简单聊聊如何根据请求&lt;code&gt;Header&lt;/code&gt;进行代理的匿名检测。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何在centos7上搭建验证码识别平台</title>
      <link>https://pyocean.com/post/2019_06_24_%E5%A6%82%E4%BD%95%E5%9C%A8centos7%E4%B8%8A%E6%90%AD%E5%BB%BA%E9%AA%8C%E8%AF%81%E7%A0%81%E8%AF%86%E5%88%AB%E5%B9%B3%E5%8F%B0/</link>
      <pubDate>Mon, 24 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pyocean.com/post/2019_06_24_%E5%A6%82%E4%BD%95%E5%9C%A8centos7%E4%B8%8A%E6%90%AD%E5%BB%BA%E9%AA%8C%E8%AF%81%E7%A0%81%E8%AF%86%E5%88%AB%E5%B9%B3%E5%8F%B0/</guid>
      <description>&lt;p&gt;验证码作为一种最为基础的图灵测试已经广泛存在于各种网站，而在某些场景下我们需要绕过这些测试，此时就需要使用到&lt;code&gt;Tesseract&lt;/code&gt;，一个光学字符识别引擎，且支持多种操作系统。并且是被认为是最精准的开源光学字符识别引擎之一。现在我们来看看如何将其搭建到centos7上面的。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>V2ray快速安装部署</title>
      <link>https://pyocean.com/post/2019_05_01_v2ray%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/</link>
      <pubDate>Wed, 01 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pyocean.com/post/2019_05_01_v2ray%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/</guid>
      <description>&lt;p&gt;&lt;code&gt;Shadowsock&lt;/code&gt;作为普遍用户第一的翻墙选择，已经变得泛滥。高识别率，加密方式存在已知缺陷等等都让它荣光不再。而这种时候，&lt;code&gt;V2ray&lt;/code&gt;站了出来。让我们一起来看看吧!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Centos7下编译安装tor[0.4.0.4]</title>
      <link>https://pyocean.com/post/2019_04_03_centos7%E4%B8%8B%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85tor0.4.0.4/</link>
      <pubDate>Wed, 03 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pyocean.com/post/2019_04_03_centos7%E4%B8%8B%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85tor0.4.0.4/</guid>
      <description>&lt;p&gt;tor安装笔记,简单记录一下.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>常见匿名发送邮件</title>
      <link>https://pyocean.com/post/2019_04_02_%E5%B8%B8%E8%A7%81%E5%8C%BF%E5%90%8D%E5%8F%91%E9%80%81%E9%82%AE%E7%AE%B1/</link>
      <pubDate>Tue, 02 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pyocean.com/post/2019_04_02_%E5%B8%B8%E8%A7%81%E5%8C%BF%E5%90%8D%E5%8F%91%E9%80%81%E9%82%AE%E7%AE%B1/</guid>
      <description>&lt;p&gt;生活总有不时之需~&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>常见匿名接收邮箱</title>
      <link>https://pyocean.com/post/2019_04_01_%E5%B8%B8%E8%A7%81%E5%8C%BF%E5%90%8D%E6%8E%A5%E6%94%B6%E9%82%AE%E4%BB%B6/</link>
      <pubDate>Mon, 01 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pyocean.com/post/2019_04_01_%E5%B8%B8%E8%A7%81%E5%8C%BF%E5%90%8D%E6%8E%A5%E6%94%B6%E9%82%AE%E4%BB%B6/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Caddy&amp;WebHook移植静态博客</title>
      <link>https://pyocean.com/post/2019_03_30_caddywebhook%E6%90%AD%E5%BB%BAblog/</link>
      <pubDate>Sat, 30 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pyocean.com/post/2019_03_30_caddywebhook%E6%90%AD%E5%BB%BAblog/</guid>
      <description>&lt;p&gt;在完成了通过github搭建博客之后，我们希望使用自己的服务器及域名来运行博客。我们或许会想着，在本地生成后再传送到服务器相应文件夹目录即可，可这样似乎非常的麻烦。在这里我要推荐一款叫做&lt;code&gt;Caddy&lt;/code&gt;的中间件。它类似&lt;code&gt;Nginx&lt;/code&gt;，但却做到了极简配置、自动HTTPS等各种特性。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Gihub&amp;Hugo搭建静态博客</title>
      <link>https://pyocean.com/post/2019_03_29_githubhugo%E6%90%AD%E5%BB%BAblog/</link>
      <pubDate>Fri, 29 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pyocean.com/post/2019_03_29_githubhugo%E6%90%AD%E5%BB%BAblog/</guid>
      <description>&lt;p&gt;作为非常受欢迎的开源静态站点生成器之一，Hugo兼速度与灵活性并存，而Github的存在又让blog搭建变成了几近0成本的可能。今天我们就来以Mac环境为例讲一讲如何利用俩者来快速搭建一个静态Blog。且编写风格为&lt;code&gt;Markdown&lt;/code&gt;。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Django ORM操作</title>
      <link>https://pyocean.com/post/2019_03_28_django%E7%AC%94%E8%AE%B0_orm%E6%9F%A5%E8%AF%A2%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Thu, 28 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pyocean.com/post/2019_03_28_django%E7%AC%94%E8%AE%B0_orm%E6%9F%A5%E8%AF%A2%E6%93%8D%E4%BD%9C/</guid>
      <description>&lt;p&gt;简述djangoOrm过滤查询常用操作符。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>自定义JWT Header头</title>
      <link>https://pyocean.com/post/2019_03_27_django%E7%AC%94%E8%AE%B0_%E8%87%AA%E5%AE%9A%E4%B9%89authheader%E5%A4%B4/</link>
      <pubDate>Wed, 27 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pyocean.com/post/2019_03_27_django%E7%AC%94%E8%AE%B0_%E8%87%AA%E5%AE%9A%E4%B9%89authheader%E5%A4%B4/</guid>
      <description>&lt;p&gt;在某些特定场景下，我们需要修改默认的JWT认证请求Header头。这里做一下简单记录。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>几款或许能改善编写效率的工具(第一期)</title>
      <link>https://pyocean.com/post/2018_12_26_%E5%87%A0%E6%AC%BE%E6%88%96%E8%AE%B8%E8%83%BD%E6%94%B9%E5%96%84%E7%BC%96%E5%86%99%E6%95%88%E7%8E%87%E7%9A%84%E5%B7%A5%E5%85%B7l1/</link>
      <pubDate>Wed, 26 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pyocean.com/post/2018_12_26_%E5%87%A0%E6%AC%BE%E6%88%96%E8%AE%B8%E8%83%BD%E6%94%B9%E5%96%84%E7%BC%96%E5%86%99%E6%95%88%E7%8E%87%E7%9A%84%E5%B7%A5%E5%85%B7l1/</guid>
      <description>&lt;p&gt;时间宝贵,效率至上.今日主讲: Quick HTTP Inspector、go-sniffer、pdir2、tldr、translate-shell&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>快速实现暗网交易监控</title>
      <link>https://pyocean.com/post/2018_12_24_%E5%BF%AB%E9%80%9F%E5%AE%9E%E7%8E%B0%E6%9A%97%E7%BD%91%E4%BA%A4%E6%98%93%E7%9B%91%E6%8E%A7/</link>
      <pubDate>Mon, 24 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pyocean.com/post/2018_12_24_%E5%BF%AB%E9%80%9F%E5%AE%9E%E7%8E%B0%E6%9A%97%E7%BD%91%E4%BA%A4%E6%98%93%E7%9B%91%E6%8E%A7/</guid>
      <description>&lt;p&gt;暗网或许对大多数人来说都是一个陌生的名词，但对于一个安全人员却是必不可少的一样的东西。暗网之内鱼龙混杂，内含的活动内容也是参差不齐。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>动动手做一个UserAgent库</title>
      <link>https://pyocean.com/post/2018_11_29_%E5%8A%A8%E5%8A%A8%E6%89%8B%E5%81%9A%E4%B8%80%E4%B8%AAuseragent%E5%BA%93/</link>
      <pubDate>Thu, 29 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pyocean.com/post/2018_11_29_%E5%8A%A8%E5%8A%A8%E6%89%8B%E5%81%9A%E4%B8%80%E4%B8%AAuseragent%E5%BA%93/</guid>
      <description>&lt;p&gt;作为一个爬虫脚本，基本的伪装是很必要的。而User-Agent头这个看似不起眼的元素，却起着至关重要的作用。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>一个Tor代理绕过访问限制的典型案例</title>
      <link>https://pyocean.com/post/2018_10_24_%E4%B8%80%E4%B8%AAtor%E4%BB%A3%E7%90%86%E7%BB%95%E8%BF%87%E8%AE%BF%E9%97%AE%E9%99%90%E5%88%B6%E7%9A%84%E5%85%B8%E5%9E%8B%E6%A1%88%E4%BE%8B/</link>
      <pubDate>Wed, 24 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pyocean.com/post/2018_10_24_%E4%B8%80%E4%B8%AAtor%E4%BB%A3%E7%90%86%E7%BB%95%E8%BF%87%E8%AE%BF%E9%97%AE%E9%99%90%E5%88%B6%E7%9A%84%E5%85%B8%E5%9E%8B%E6%A1%88%E4%BE%8B/</guid>
      <description>&lt;p&gt;在编写爬虫测试初期，我们一般会验证目标站点是否存在若干的访问限制防护措施。例如UA防护、访问频率限制、人机验证等。而些许站点虽然存在这样的防护，但也可以通过代理绕过。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>绕过CloudFlare-JSfuck防护验证</title>
      <link>https://pyocean.com/post/2018_10_19_%E7%BB%95%E8%BF%87cloudflare-jsfuck%E9%98%B2%E6%8A%A4%E9%AA%8C%E8%AF%81/</link>
      <pubDate>Thu, 18 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pyocean.com/post/2018_10_19_%E7%BB%95%E8%BF%87cloudflare-jsfuck%E9%98%B2%E6%8A%A4%E9%AA%8C%E8%AF%81/</guid>
      <description>&lt;p&gt;近日在爬取某个站点的时候发现，默认必须通过首页跳转才可以访问其内容页。并且，源码中存在着一些诡异的js代码。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pyocean.com/post/2020_02_14_%E6%89%B9%E9%87%8F%E7%BF%BB%E8%AF%91_%E8%AE%A9%E4%BD%A0%E7%9A%84%E5%B7%A5%E4%BD%9C%E6%95%88%E7%8E%87%E6%88%90%E5%80%8D%E5%A2%9E%E9%95%BF/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pyocean.com/post/2020_02_14_%E6%89%B9%E9%87%8F%E7%BF%BB%E8%AF%91_%E8%AE%A9%E4%BD%A0%E7%9A%84%E5%B7%A5%E4%BD%9C%E6%95%88%E7%8E%87%E6%88%90%E5%80%8D%E5%A2%9E%E9%95%BF/</guid>
      <description> </description>
    </item>
    
    <item>
      <title></title>
      <link>https://pyocean.com/post/2020_02_18_%E9%80%9A%E8%BF%87vim%E6%90%AD%E5%BB%BA%E8%BD%BB%E9%87%8Fide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pyocean.com/post/2020_02_18_%E9%80%9A%E8%BF%87vim%E6%90%AD%E5%BB%BA%E8%BD%BB%E9%87%8Fide/</guid>
      <description>0x01 查看python支持 通过命令vim --version|grep python查看是否存在 +python3，存在的话直接看下一节0x02。如果我们看到的情况是-python3 ，那么就需要重新安装vim。
我们通过brew install vim 来安装。在安装结束后通过最开始的步骤再次查看。
0x02 安装增强 我们通过以下命令，安装vim-plug
curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim 添加</description>
    </item>
    
  </channel>
</rss>